import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

//buildscript {
//    repositories {
//        maven {
//            url "https://plugins.gradle.org/m2/"
//        }
//    }
//    dependencies {
//        classpath "com.github.johnrengelman:shadow:8.1.1"
//    }
//}

plugins {
    id 'groovy'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    //id 'antlr'
}

group 'de.schemmea.ma'
version '1.0-SNAPSHOT'
sourceCompatibility = '11'
targetCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {

    // shadow localGroovy()
    // shadow gradleApi()
    implementation('org.codehaus.groovy:groovy-all:3.0.15') {
        exclude group: 'com.beust', module: 'jcommander'
        exclude group: 'org.jline', module: 'jline'
        exclude group: 'junit', module: 'junit'
        exclude group: 'info.picocli', module: 'picocli'
    }

    implementation 'edu.berkeley.cs.jqf:jqf-fuzz:1.9'
    implementation 'org.antlr:antlr4-runtime:4.12.0'
    implementation 'io.nextflow:nextflow:23.02.1-edge'

    // exclude group: 'org.slf4j', module: 'slf4j-api'


    // implementation files('libs/gramtest-0.2.3-jar-with-dependencies.jar')

    //     implementation('edu.berkeley.cs.jqf:jqf-fuzz:1.9') {
    //     exclude group: 'org.slf4j', module: 'slf4j-api'
    // }

    //antlr 'org.antlr:antlr4:4.5'

    testImplementation 'org.codehaus.groovy:groovy-all:3.0.15'
    //testImplementation 'org.codehaus.groovy:groovy-test-junit5:3.0.15'
    testImplementation 'edu.berkeley.cs.jqf:jqf-fuzz:1.9'

    // testImplementation('edu.berkeley.cs.jqf:jqf-fuzz:1.9') {
    //     exclude group: 'org.slf4j', module: 'slf4j-api'
    // }

}

sourceSets.main.groovy.srcDirs = ['src/main/groovy']
//sourceSets.main.java.srcDirs = ['src/main/java']
//sourceSets.main.antlr.srcDirs = ['src/main/antlr4']

/**
 generateGrammarSource {
 maxHeapSize = "64m"
 // outputDirectory = file("src/main/groovy/de/schemmea/ma/gramtest")
 // Keep a copy of generated sources
 // doLast {
 //   def tmpSource = "${buildDir}/generated-src/antlr/main"
 //   def tmpLocation = "src-gen/"
 //     println "Copying generated grammar lexer/parser files to main directory. from ${tmpSource} to ${tmpLocation}"
 //     copy {
 //         from tmpSource
 //         into tmpLocation
 //     }
 // }
 }
 **/
application {
    mainClass = 'de.schemmea.ma.TestExecutor'
}
mainClassName = 'de.schemmea.ma.TestExecutor'


shadowJar {
    mergeGroovyExtensionModules()
}

//jar {
//    manifest {
//        attributes 'Main-Class': 'de.schemmea.ma.TestExecutor'
//    }
//
//   duplicatesStrategy = DuplicatesStrategy.INCLUDE
//   from {
//       configurations.runtimeClasspath.collect {
//           it.isDirectory() ? it : zipTree(it)
//              .matching {
//                  exclude 'META-INF/MANIFEST.MF'
//                  exclude 'META-INF/LIST*'
//           }
//
//       }
//   }
//}
