<nextflow> ::= <shebang> <newline> <processes> <space> <workflow>

<shebang> ::= "#!/usr/bin/env nextflow"
<magicstring> ::= "scriptnamemagicstring"
<magicstring2> ::= "scriptname2magicstring"
<processcallsplaceholder> ::= "prozessscallmagicstring"
<processcallsplaceholder2> ::= "prozesss2callmagicstring"
<processwithtwovars> ::= "_twovars"
<processes> ::= <process> <newline> <process> | <processes> <newline> <process>
<workflow> ::= <workflowheader> <workflowbody>
<debug> ::= "debug true"
<process> ::= <process1> | <process2>
<process1> ::= <processheader> <curlyopen> <newline> <space> <debug> <newline> <processbody> <newline> <curlyclose> <newline>

<processheader> ::= "process" <space> <identifier>
<processbody> ::=  <space> <staticinput> <newline> <space> <staticoutput> <space> <script>
<staticinput> ::=   "input:"  <newline> <space> <space> "val variable" <newline>
<staticoutput> ::=  "output:" <newline> <space> <space> "val variable" <newline>
<script> ::= "script:" <newline> <space> <space> <template> <space> <tick> <magicstring> <tick>

<process2> ::= <processheader2> <curlyopen> <newline> <space> <debug> <newline> <processbody2> <newline> <curlyclose> <newline>

<processheader2> ::= "process" <space> <identifier2>
<processbody2> ::=  <space> <staticinput2> <newline> <space> <staticoutput2> <space> <script2>
<staticinput2> ::=   "input:"  <newline> <space> <space> "val variable" <newline> <space> <space> "val variable2" <newline>
<staticoutput2> ::=  "output:" <newline> <space> <space> "val variable" <newline> <space> <space> "val variable2" <newline>
<script2> ::= "script:" <newline> <space> <space> <template> <space> <tick> <magicstring2> <tick>

<template> ::= "template"
<workflowheader> ::= "workflow" <space>
<workflowbody> ::= <curlyopen> <newline> <space> <space> <channel> <processcallsplaceholder> <newline> <space> <space> <branchedchannel> <processcallsplaceholder2> <newline> <curlyclose>
<channel> ::= "Channel.of" <open> <channellist> <close>
<branchedchannel> ::= <channel> <branchtotwo>

<branchtotwo> ::= ".branch " <curlyopen> <newline> <branch> <defaultbranch> <space> <curlyclose>
<branch> ::= <space> <space> "one" <colon> <booleanexpression> <newline>
<defaultbranch> ::= <space> <space> "two" <colon> <booleanexpression> <newline>
<booleanexpression> ::= <boolean> | "it" <booleanoperator> <channelitem> <or> <booleanexpression>

<channellist> ::= <channelitemquad> | <channelitempair> | <channellist> <comma> <channelitem>
<channelitem> ::= <number> | <quote> <identifier> <quote>
<channelitempair> ::= <channelitem> <comma> <channelitem>
<channelitemquad> ::= <channelitempair> <comma> <channelitempair>

<identifier> ::= <char> <char> | <identifier> <char>
<identifier2> ::= <identifier> <processwithtwovars>
<char> ::= a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z
<uint> ::= 1|2|3|4|5|6|7|8|9
<zero> ::= 0
<digit> ::= <zero> | <uint>
<boolean> ::= <true> | <false>
<true> ::= "true"
<false> ::= "false"
<booleanoperator> ::= "<" | ">" | "<=" | ">=" | "==" | "!="
<or> ::= "||"
<number> ::= <zero> | <uint> |  <uint> <number>
<space> ::= " "
<curlyopen> ::= "{"
<curlyclose> ::= "}"
<open> ::= "("
<close> ::= ")"
<bracketopen> ::= "["
<bracketclose> ::= "]"
<newline> ::= " \n "
<pipe> ::= " | "
<tick> ::= "'"
<comma> ::= ","
<quote> ::= '"'
<colon> ::= ":"